## A lot of sensors borrowed from here: https://github.com/bl0rp/Home-AssistantConfig/blob/master/packages/systeminfo.yaml#L295

sensor:
##################################################################
### Current HASS Version
###################################################################
  - platform: command_line
    command: python3 -c "import requests; print(requests.get('https://pypi.python.org/pypi/homeassistant/json').json()['info']['version'])"
    name: Current HASS Version

##################################################################
### Installed HASS Version
###################################################################
  -  platform: command_line
     command: python -m homeassistant --version
     name: Installed HASS Version

##################################################################
### HASS Update Available
###################################################################
  - platform: template
    sensors:
      hass_update_available:
        friendly_name: 'HASS Update Available'
        value_template: >-
          {%- if states.sensor.current_hass_version.state != states.sensor.installed_hass_version.state -%}
             Yes
          {%- else -%}
             No
          {%- endif -%}
          
###### CUSTOM HA/Version
  - platform: template
    sensors:
      ha_version:
        value_template: "{%- if states.sensor.ha_release.state == states.sensor.ha_release_local.state-%} Yes! {% else %}{{states.sensor.ha_release.state}} No! {% endif%}"    
        icon_template: >-
          {% if states.sensor.ha_release.state == states.sensor.ha_release_local.state %}
            mdi:checkbox-marked
          {% else %}
            mdi:checkbox-blank-outline
          {% endif %}
          
          
##################################################################
### Uptime for the server
###################################################################
  - platform: command_line
    name: host_uptime_in_seconds
    command: "awk '{print $1}' /proc/uptime"
    unit_of_measurement: "sec"
    value_template: '{{ value|round }}'

  - platform: template
    sensors:
      host_uptime_human:
        value_template: >-
           {% macro human_time(second) -%}
             {%- set second = second|int -%}
             {%- set comma = joiner(', ') -%}
             {%- set intervals = {
               'week': 60 * 60 * 24 * 7,
               'day': 60 * 60 * 24,
               'hour': 60 * 60,
               'minute': 60,
               'second': 1,
             } -%}
             {%- set week = second // intervals.week -%}
             {%- set second = second % intervals.week -%}
             {{- comma() ~ week ~ ' Week' ~ ('s' if week != 1) if week -}}
             {%- set day = second // intervals.day -%}
             {%- set second = second % intervals.day -%}
             {{- comma() ~ day ~ ' Day' ~ ('s' if day != 1) if day -}}
             {%- set hour = second // intervals.hour -%}
             {%- set second = second % intervals.hour -%}
             {{- comma() ~ hour ~ ' Hour' ~ ('s' if hour != 1) if hour -}}
             {%- set minute = second // intervals.minute -%}
             {{- comma() ~ minute ~ ' Minute' ~ ('s' if minute != 1) if minute -}}
             {%- set second = second % intervals.minute -%}
             {{- comma() ~ second ~ ' Second' ~ ('s' if second != 1) if second -}}
           {%- endmacro %}
           {{ human_time(states.sensor.host_uptime_in_seconds.state | int ) }}               
