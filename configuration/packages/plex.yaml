automation:
  - alias: Plex Webhook
    initial_state: 'on'
    trigger:
      platform: webhook
      webhook_id: !secret plex_webhook
    action:
     - service: mqtt.publish
       data_template:
         topic: 'plex/update'
         payload_template: >
           {{ (trigger.data['payload'] | string)[12:][:-2] | replace ("\\\\", "\\") | replace ("\\\'", "'") | replace ("\\x","?") }}
  #   - service: notify.slackbot
  #     data_template:
  #       message: >
  #        Original: {{ (trigger.data['payload'] | string)[12:][:-2]| replace ("\\\\", "\\") | replace ("\\\'", "'") | replace ("\\x","?")}}

  - alias: Plex Office
    initial_state: 'on'
    trigger:
      platform: mqtt
      topic: 'plex/update'
    condition:
      condition: template
      value_template: "{{trigger.payload_json.Player.title == 'dar-pc-01'}}"
    action:
      - service: mqtt.publish
        data_template:
          topic: 'plex/update/office'
          payload_template: '{ "event:"{{ trigger.payload_json.event }}", "account":"{{ trigger.payload_json.Account.title }}"}'

  - alias: Plex Webhook As Json
    initial_state: 'on'
    trigger:
      platform: mqtt
      topic: 'plex/update'
    action:
      - service: script.process_plex_message
        data_template:
          event: "{{ trigger.payload_json.event }}"
          player: "{{ trigger.payload_json.Player.title }}"
          account: "{{ trigger.payload_json.Account.title }}"
          
sensor:
  - platform: mqtt
    name: "Office Plex"
    state_topic: "plex/update/office"    
    value_template: "{{ value_json.event }}"
    json_attributes:
      - account
    
    
script:
  process_plex_message:
    sequence:
      - service: notify.slackbot
        data_template:    
          message: "Plex event: {{ event }} - {{ account }} - {{ player }}"

