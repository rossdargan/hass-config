alarm_control_panel:
  - platform: manual_mqtt
    state_topic: home/alarm
    command_topic: home/alarm/set
    code: !secret pin
    delay_time: 20 #20 seconds to disarm the alarm
    code_arm_required: false    

input_boolean:
  test_mode:
    name: Put the alarm into test mode
    initial: off
    icon: mdi:mdi-volume-off

#################################################
###               Triggers                    ###
#################################################
automation:
- alias: 'Trigger alarm while armed away'
  trigger:
    - platform: state
      entity_id: binary_sensor.hall_motion_motion
      to: 'on'   
    - platform: state
      entity_id: binary_sensor.garage_motion_sensor
      to: 'on'
    - platform: state
      entity_id: binary_sensor.front_door
      to: 'on'
    - platform: state
      entity_id: binary_sensor.garage_door
      to: 'on'
    - platform: state
      entity_id: binary_sensor.playroom_door
      to: 'on'                
  condition:
    - condition: state
      entity_id: alarm_control_panel.ha_alarm
      state: armed_away
  action:
    service: alarm_control_panel.alarm_trigger
    entity_id: alarm_control_panel.ha_alarm

####################################################
###      Alarm triggerd notifications            ###
####################################################
- alias: 'Send notification when alarm triggered'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.ha_alarm
      to: 'triggered'
  condition:
    - condition: state
      entity_id: input_boolean.test_mode
      state: 'off'     
  action:
    - service: notify.twilio
      data:
        message: "ALARM! The alarm has been triggered"
        target: !secret ross_mobile_number   
    - service: notify.html5
      data:
        message: "ALARM! The alarm has been triggered"


#################### Disarm actions ######################
- alias: Door unlocked
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: lock.front_door
      from: 'locked'
      to: 'unlocked'
    - platform: state
      entity_id: lock.office_door
      from: 'locked'
      to: 'unlocked'
    - platform: state
      entity_id: lock.playroom_door
      from: 'locked'
      to: 'unlocked'                
  condition:
    - condition: state
      entity_id: alarm_control_panel.ha_alarm
      state: 'armed_away'
  action:
    - service: alarm_control_panel.alarm_disarm
      data:
          entity_id: alarm_control_panel.ha_alarm
          code: !secret pin


###################Notify when alarm goes off script########
script:
  flash_lights:
    sequence:
      - condition: state
        entity_id: alarm_control_panel.ha_alarm
        state: 'triggered'
      - service: light.turn_on
        entity_id: all
        color_name: "red"
      - delay: '00:00:1'
      - condition: state
        entity_id: alarm_control_panel.ha_alarm
        state: 'triggered'      
      - service: light.turn_off
        entity_id: all     
      - delay: '00:00:1'        
  alarm_triggered:
    sequence:
      - service: notify.twilio
        data:
          message: "ALARM! The alarm has been triggered"
          target: !secret ross_mobile_number
      - service: notify.html5
        data:
          message: "ALARM! The alarm has been triggered"          
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights
      - service: script.flash_lights                                                                                                                                                                              